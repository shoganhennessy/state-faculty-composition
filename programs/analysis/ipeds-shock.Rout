
R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/R
> ## Senan Hogan-Hennessy, 3 August June 2022
> ## IV for Prof's salaries, using IPEDS data.
> print(c(Sys.time(), Sys.Date()))
[1] "2022-08-31 16:59:12 EDT" "2022-08-30 20:00:00 EDT"
> library(tidyverse) # Functions for data manipulation and visualization
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.6     ✔ dplyr   1.0.9
✔ tidyr   1.2.0     ✔ stringr 1.4.0
✔ readr   2.1.2     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(lfe) # Functions for fast linear models with IV + FEs
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

> library(plm) # Functions for panel data

Attaching package: ‘plm’

The following object is masked from ‘package:lfe’:

    sargan

The following objects are masked from ‘package:dplyr’:

    between, lag, lead

> library(car) # Function for F stat regarding IV models
Loading required package: carData

Attaching package: ‘car’

The following object is masked from ‘package:dplyr’:

    recode

The following object is masked from ‘package:purrr’:

    some

> # My custom flavour of Stargazer TeX tables:
> # devtools::install_github("shoganhennessy/stargazer")
> library(stargazer) # TeX tables

Please cite as: 

 Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.3. https://CRAN.R-project.org/package=stargazer 

> set.seed(47)
> # This file follows an adjusted Deming Walters (2017, p.10) approach to
> # appropriations shock instrument.
> 
> # Define number of digits in tables and graphs
> digits.no <- 3
> 
> # Size for figures
> fig.width <- 10
> fig.height <- fig.width * 0.85
> 
> 
> # Load data sources ------------------------------------------------------------
> 
> # Load IPEDS data
> ipeds.data <- read_csv("../../data/urban-ipeds/urban-clean-publicunis.csv")
Rows: 26168 Columns: 48
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (2): inst_name, state
dbl (46): unitid, year, public, forprofit, fouryear, associatescollege, cpi2...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> 
> # Clean data -------------------------------------------------------------------
> 
> # Select IPEDS variables, and define the panel at the university level
> reg.data <- ipeds.data %>%
+     # Create independent columns and rows.
+     select(
+         # Identifiers and controls
+         unitid,
+         year,
+         state,
+         # Appropriations to the uni
+         totalrevenues_real,
+         nonauxrevenues_real,
+         stateappropriations_real,
+         tuitionrev_real,
+         # Uni spending.
+         nonauxspending_real,
+         # Uni enrollment
+         enrollment_reported,
+         enrollment_fte,
+         # Appropriation shocks Per student
+         appropriationshock_perEnroll_real,
+         appropriationshock_perFTE_real,
+         appropriationshock_peruni_real,
+         # Count of full-time professors (tenured or not)
+         lecturer_prof_count,
+         assistant_prof_count,
+         full_prof_count,
+         all_prof_count,
+         # Count of professors by tenure-rate (only 1990-)
+         nontenured_tenure_count,
+         tenuretrack_tenure_count,
+         tenured_tenure_count,
+         all_tenure_count,
+         # Average faculty salary
+         full_profmeansalary_real,
+         assistant_profmeansalary_real,
+         lecturer_profmeansalary_real,
+         all_profmeansalary_real,
+         # Total paid on professor salaries
+         all_profoutlays_real)
> 
> # Restrict data to unis + years with measured state appropriations & shocks
> reg.data <- reg.data %>%
+     filter(1990 <= year,
+         !is.na(enrollment_reported), enrollment_reported > 0,
+         !is.na(all_prof_count),
+         !is.na(stateappropriations_real),
+         !is.na(appropriationshock_perEnroll_real))
> 
> 
> # Save memory by removing initally loaded files
> rm(ipeds.data)
> gc()
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 2378284 127.1    4146352 221.5  4146352 221.5
Vcells 4473417  34.2   10146329  77.5  6927954  52.9
> 
> 
> # Summary Table ----------------------------------------------------------------
> reg.data %>%
+     transmute(
+         enrollment_reported = enrollment_reported,
+         stateappropriations_real = stateappropriations_real / (10^6),
+         totalrevenues_real = totalrevenues_real / (10^6),
+         #nonauxrevenues_real = nonauxrevenues_real / (10^6),
+         lecturer_prof_count = lecturer_prof_count,
+         assistant_prof_count = assistant_prof_count,
+         full_prof_count = full_prof_count,
+         all_prof_count = all_prof_count,
+         lecturer_profmeansalary_real = lecturer_profmeansalary_real,
+         assistant_profmeansalary_real = assistant_profmeansalary_real,
+         full_profmeansalary_real = full_profmeansalary_real,
+         all_profmeansalary_real = all_profmeansalary_real) %>%
+     as.data.frame() %>%
+     stargazer(summary = TRUE,
+         summary.stat = c("mean", "sd", "median", "n"),
+         digits = 0,
+         digits.extra = 0,
+         covariate.labels = c(
+             "Enrollment, institution reported",
+             "State appropriations (millions 2021 USD)",
+             "Total revenues (millions 2021 USD)",
+             #"Non-instutional revenues (millions 2021 USD)",
+             "Lecturers count",
+             "Assistant professors count",
+             "Full professors count",
+             "All professors count",
+             "Lecturers mean salary (2021 USD)",
+             "Assistant mean salary (2021 USD)",
+             "Full mean salary (2021 USD)",
+             "All mean salary (2021 USD)"),
+         omit.table.layout = "n",
+         header = FALSE, float = FALSE, no.space = TRUE,
+         type = "text",
+         out = "../../text/tables/ipeds-summary-fte.tex")

======================================================================
Statistic                                 Mean  St. Dev. Median   N   
----------------------------------------------------------------------
Enrollment, institution reported         11,511  10,821  7,723  18,504
State appropriations (millions 2021 USD)   99     125      52   18,504
Total revenues (millions 2021 USD)        425     793     158   18,504
Lecturers count                            60      74      34   17,329
Assistant professors count                113     102      84   17,826
Full professors count                     261     284     162   17,929
All professors count                      429     437     284   18,504
Lecturers mean salary (2021 USD)         58,212  13,244  56,215 16,686
Assistant mean salary (2021 USD)         74,319  13,849  72,191 17,750
Full mean salary (2021 USD)              99,675  23,590  95,229 17,837
All mean salary (2021 USD)               81,570  25,055  80,582 17,759
----------------------------------------------------------------------
> 
> 
> # Plot funding sources over time -----------------------------------------------
> 
> # Plot total gov funding by year.
> mean_funding_fte.data <- reg.data %>%
+     group_by(year) %>%
+     summarise(
+         totalrevenues_real =
+             mean(totalrevenues_real / enrollment_reported, na.rm = TRUE),
+         #nonauxrevenues_real =
+         #    mean(nonauxrevenues_real / enrollment_reported, na.rm = TRUE),
+         stateappropriations_real =
+             mean(stateappropriations_real / enrollment_reported, na.rm = TRUE),
+         tuitionrev_real =
+             mean(tuitionrev_real / enrollment_reported, na.rm = TRUE))
> # Define the plot
> mean_funding_fte.graph <- mean_funding_fte.data %>%
+     pivot_longer(!year, names_to = "variable", values_to = "millions") %>%
+     ggplot(aes(x = year, y = millions, colour = variable)) +
+     geom_point() +
+     geom_line() +
+     # Adjust the names and axis
+     scale_x_continuous(name = "Year",
+         breaks = seq(1985, 2020, by = 5)) +
+     scale_y_continuous(name = "",
+         limits = c(0, 52000),
+         breaks = seq(0, 50000, by = 10000),
+         labels = scales::comma) +
+     theme_bw() +
+     theme(plot.title = element_text(hjust = 0.5),
+         legend.position = "top") +
+     scale_colour_discrete(name = "",
+         breaks = c("totalrevenues_real", "nonauxrevenues_real",
+         "stateappropriations_real", "tuitionrev_real"),
+         labels = c("Total", "Non-aux.", "State", "Tuition"))
> # Save this plot
> ggsave("../../text/figures/mean-funding-fte.png",
+     plot = mean_funding_fte.graph,
+     units = "cm", width = fig.width, height = fig.height)
> 
> # Plot total gov funding by year.
> mean_funding.data <- reg.data %>%
+     group_by(year) %>%
+     summarise(
+         totalrevenues_real =
+             mean(totalrevenues_real, na.rm = TRUE) / (10^6),
+         #nonauxrevenues_real =
+         #    mean(nonauxrevenues_real, na.rm = TRUE) / (10^6),
+         stateappropriations_real =
+             mean(stateappropriations_real, na.rm = TRUE) / (10^6),
+         tuitionrev_real =
+             mean(tuitionrev_real, na.rm = TRUE) / (10^6))
> # Define the plot
> mean_funding.graph <- mean_funding.data %>%
+     pivot_longer(!year, names_to = "variable", values_to = "millions") %>%
+     ggplot(aes(x = year, y = millions, colour = variable)) +
+     geom_point() +
+     geom_line() +
+     # Adjust the names and axis
+     scale_x_continuous(name = "Year",
+         breaks = seq(1985, 2020, by = 5)) +
+     scale_y_continuous(name = "",
+         limits = c(0, 560),
+         breaks = seq(0, 500, by = 100),
+         labels = scales::comma) +
+     theme_bw() +
+     theme(plot.title = element_text(hjust = 0.5),
+         legend.position = "top") +
+     scale_colour_discrete(name = "",
+         breaks = c("totalrevenues_real", "nonauxrevenues_real",
+         "stateappropriations_real", "tuitionrev_real"),
+         labels = c("Total", "Non-inst.", "State", "Tuition"))
> # Save this plot
> ggsave("../../text/figures/mean-funding-total.png",
+     plot = mean_funding.graph,
+     units = "cm", width = fig.width, height = fig.height)
> 
> # SHow figures fo 1990 and 2020, mean and total
> print("total rev:")
[1] "total rev:"
> print(c("Mean total rev per uni, 1990",
+     mean_funding.data %>% filter(year == 1990) %>% pull(totalrevenues_real)))
[1] "Mean total rev per uni, 1990" "280.637899580522"            
> print(c("Mean total rev per uni, 2020",
+     mean_funding.data %>% filter(year == 2020) %>% pull(totalrevenues_real)))
[1] "Mean total rev per uni, 2020" "532.181877708097"            
> print(c("Mean total rev per student, 1990",
+     mean_funding_fte.data %>% filter(year == 1990) %>% pull(totalrevenues_real)))
[1] "Mean total rev per student, 1990" "34347.1976202591"                
> print(c("Mean total rev per student, 2020",
+     mean_funding_fte.data %>% filter(year == 2020) %>% pull(totalrevenues_real)))
[1] "Mean total rev per student, 2020" "44950.0821430999"                
> print("state approp:")
[1] "state approp:"
> print(c("Mean state rev per uni, 1990",
+     mean_funding.data %>% filter(year == 1990) %>% pull(stateappropriations_real)))
[1] "Mean state rev per uni, 1990" "108.153173854526"            
> print(c("Mean state rev per uni, 2020",
+     mean_funding.data %>% filter(year == 2020) %>% pull(stateappropriations_real)))
[1] "Mean state rev per uni, 2020" "89.2313859258409"            
> print(c("Mean state rev per student, 1990",
+     mean_funding_fte.data %>% filter(year == 1990) %>% pull(stateappropriations_real)))
[1] "Mean state rev per student, 1990" "12537.1966028422"                
> print(c("Mean state rev per student, 2020",
+     mean_funding_fte.data %>% filter(year == 2020) %>% pull(stateappropriations_real)))
[1] "Mean state rev per student, 2020" "8097.2610334097"                 
> print("enrollment in 1990 as a percent of that in 2020 among PUs")
[1] "enrollment in 1990 as a percent of that in 2020 among PUs"
> enrollment_yearly.data <- reg.data %>%
+     group_by(year) %>%
+     summarise(enrollment_reported = sum(enrollment_reported, na.rm = TRUE))
> print((
+     (enrollment_yearly.data %>% filter(year == 2020) %>% pull(enrollment_reported)) -
+     (enrollment_yearly.data %>% filter(year == 1991) %>% pull(enrollment_reported))
+     ) / (enrollment_yearly.data %>% filter(year == 1991) %>% pull(enrollment_reported)
+ ))
[1] 0.4617254
> 
> # Repeat the analysis for Illinois
> # Plot total gov funding by year.
> illinois_funding_fte.data <- reg.data %>%
+     filter(state == "IL") %>%
+     group_by(year) %>%
+     summarise(
+         totalrevenues_real =
+             mean(totalrevenues_real / enrollment_reported, na.rm = TRUE),
+         #nonauxrevenues_real =
+         #    mean(nonauxrevenues_real / enrollment_reported, na.rm = TRUE),
+         stateappropriations_real =
+             mean(stateappropriations_real / enrollment_reported, na.rm = TRUE),
+         tuitionrev_real =
+             mean(tuitionrev_real / enrollment_reported, na.rm = TRUE))
> # Define the plot
> illinois_funding_fte.graph <- illinois_funding_fte.data %>%
+     pivot_longer(!year, names_to = "variable", values_to = "millions") %>%
+     ggplot(aes(x = year, y = millions, colour = variable)) +
+     geom_point() +
+     geom_line() +
+     # Adjust the names and axis
+     scale_x_continuous(name = "Year",
+         breaks = seq(1985, 2020, by = 5)) +
+     scale_y_continuous(name = "",
+         limits = c(0, 52000),
+         breaks = seq(0, 50000, by = 10000),
+         labels = scales::comma) +
+     theme_bw() +
+     theme(plot.title = element_text(hjust = 0.5),
+         legend.position = "top") +
+     scale_colour_discrete(name = "",
+         breaks = c("totalrevenues_real", "nonauxrevenues_real",
+         "stateappropriations_real", "tuitionrev_real"),
+         labels = c("Total", "Non-inst.", "State", "Tuition"))
> # Save this plot
> ggsave("../../text/figures/illinois-funding-fte.png",
+     plot = illinois_funding_fte.graph,
+     units = "cm", width = fig.width, height = fig.height)
> 
> # Plot total gov funding by year.
> illinois_funding.data <- reg.data %>%
+     filter(state == "IL") %>%
+     group_by(year) %>%
+     summarise(
+         totalrevenues_real =
+             mean(totalrevenues_real, na.rm = TRUE) / (10^6),
+         #nonauxrevenues_real =
+         #    mean(nonauxrevenues_real, na.rm = TRUE) / (10^6),
+         stateappropriations_real =
+             mean(stateappropriations_real, na.rm = TRUE) / (10^6),
+         tuitionrev_real =
+             mean(tuitionrev_real, na.rm = TRUE) / (10^6))
> # Define the plot
> illinois_funding.graph <- illinois_funding.data %>%
+     pivot_longer(!year, names_to = "variable", values_to = "millions") %>%
+     ggplot(aes(x = year, y = millions, colour = variable)) +
+     geom_point() +
+     geom_line() +
+     # Adjust the names and axis
+     scale_x_continuous(name = "Year",
+         breaks = seq(1985, 2020, by = 5)) +
+     scale_y_continuous(name = "",
+         limits = c(0, 970),
+         breaks = seq(0, 1000, by = 100),
+         labels = scales::comma) +
+     theme_bw() +
+     theme(plot.title = element_text(hjust = 0.5),
+         legend.position = "top") +
+     scale_colour_discrete(name = "",
+         breaks = c("totalrevenues_real", "nonauxrevenues_real",
+         "stateappropriations_real", "tuitionrev_real"),
+         labels = c("Total", "Non-inst.", "State", "Tuition"))
> # Save this plot
> ggsave("../../text/figures/illinois-funding-total.png",
+     plot = illinois_funding.graph,
+     units = "cm", width = fig.width, height = fig.height)
> 
> 
> # First stage Regressions ------------------------------------------------------
> 
> # Explain Revenues with a shock to (only) state appropriations.
> firststage_approp.reg <- reg.data %>%
+     felm(log(stateappropriations_real / enrollment_reported) ~ 1 +
+         I(-log(appropriationshock_perEnroll_real)) |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Get the F.Stat
> firststage_approp.fstat <-
+     linearHypothesis(firststage_approp.reg, test = "F",
+         c("I(-log(appropriationshock_perEnroll_real))"))["F"] %>%
+     unlist() %>%
+     nth(2) %>%
+     as.numeric() %>%
+     round(digits.no)
> 
> # Without the FEs
> # Explain State appropriations with a shock to (only) state appropriations.
> firststage_approp_noFE.reg <- reg.data %>%
+     felm(log(stateappropriations_real / enrollment_reported) ~ 1 +
+         I(-log(appropriationshock_perEnroll_real)) |
+         0 |
+         0 |
+         state + year,
+         data = .)
> # Get the F.Stat
> firststage_approp_noFE.fstat <-
+     linearHypothesis(firststage_approp_noFE.reg, test = "F",
+         c("I(-log(appropriationshock_perEnroll_real))=0"))["F"] %>%
+     unlist() %>%
+     nth(2) %>%
+     as.numeric() %>%
+     round(digits.no)
> 
> # Explain Revenues with a shock to (only) state appropriations.
> firststage_approp_tuit.reg <- reg.data %>%
+     felm(log(stateappropriations_real / enrollment_reported) ~ 1 +
+         I(-log(appropriationshock_perEnroll_real)) +
+         log(tuitionrev_real / enrollment_reported) |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Get the F.Stat
> firststage_approp_tuit.fstat <-
+     linearHypothesis(firststage_approp_tuit.reg, test = "F",
+         c("I(-log(appropriationshock_perEnroll_real))=0"))["F"] %>%
+     unlist() %>%
+     nth(2) %>%
+     as.numeric() %>%
+     round(digits.no)
> 
> # Without the FEs
> # Explain State appropriations with a shock to (only) state appropriations.
> firststage_approp_tuit_noFE.reg <- reg.data %>%
+     felm(log(stateappropriations_real / enrollment_reported) ~ 1 +
+         I(-log(appropriationshock_perEnroll_real)) +
+         log(tuitionrev_real / enrollment_reported) |
+         0 |
+         0 |
+         state + year,
+         data = .)
> # Get the F.Stat
> firststage_approp_tuit_noFE.fstat <-
+     linearHypothesis(firststage_approp_tuit_noFE.reg, test = "F",
+         c("I(-log(appropriationshock_perEnroll_real))=0"))["F"] %>%
+     unlist() %>%
+     nth(2) %>%
+     as.numeric() %>%
+     round(digits.no)
> 
> # Collate the results to a LaTeX table
> stargazer(
+     firststage_approp.reg, firststage_approp_noFE.reg,
+     firststage_approp_tuit.reg, firststage_approp_tuit_noFE.reg,
+     dep.var.caption = "Dependent Variable: State Funding",
+     dep.var.labels.include = FALSE,
+     digits = digits.no,
+     digits.extra = digits.no,
+     model.names = FALSE,
+     omit = "factor|count|year",
+     intercept.bottom = TRUE,
+     covariate.labels = c("Appropriations Shock", "Tuition Revenue", "Constant"),
+     omit.stat = c("LL", "ser", "aic", "wald", "adj.rsq", "f"),
+     add.lines = list(
+         c("Uni. + Year fixed effects?", "Yes", "No", "Yes", "No"),
+         c("F stat.",
+             firststage_approp_tuit.fstat, firststage_approp_tuit_noFE.fstat,
+             firststage_approp.fstat, firststage_approp_noFE.fstat)),
+     star.cutoffs = NA,
+     header = FALSE, float = FALSE, no.space = TRUE,
+     omit.table.layout = "n", notes.append = FALSE,
+     type = "text",
+     out = "../../text/tables/firststage-reg-fte.tex")

===============================================================
                            Dependent Variable: State Funding  
                           ------------------------------------
                              (1)      (2)      (3)      (4)   
---------------------------------------------------------------
Appropriations Shock        -0.980    -0.350   -0.990   -0.608 
                            (0.078)  (0.084)  (0.075)  (0.059) 
Tuition Revenue                                0.063    0.558  
                                              (0.055)  (0.059) 
Constant                              6.011             -0.982 
                                     (0.688)           (0.751) 
---------------------------------------------------------------
Uni. + Year fixed effects?    Yes       No      Yes       No   
F stat.                     175.636   104.65  156.791   17.487 
Observations                18,504    18,504   18,504   18,504 
R2                           0.801    0.064    0.801    0.222  
===============================================================
> 
> 
> # Faculty Count Regressions ----------------------------------------------------
> 
> ## Non-tenured faculty Count
> lecturer.data <- reg.data %>%
+     filter(!is.na(lecturer_prof_count), lecturer_prof_count > 0)
> # Naive OLS Regression
> naive_lecturer_count.reg <- lecturer.data %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(lecturer_prof_count / enrollment_reported) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_lecturer_count.reg <- lecturer.data %>%
+     felm(log(lecturer_prof_count / enrollment_reported) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> ## Tenure-track faculty Count
> assistant.data <- reg.data %>%
+     filter(!is.na(assistant_prof_count), assistant_prof_count > 0)
> # Naive OLS Regression
> naive_assistant_count.reg <- assistant.data %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(assistant_prof_count / enrollment_reported) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_assistant_count.reg <- assistant.data %>%
+     felm(log(assistant_prof_count / enrollment_reported) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> 
> ## Tenured faculty Count
> full.data <- reg.data %>%
+     filter(!is.na(full_prof_count), full_prof_count > 0)
> # Naive OLS Regression
> naive_full_count.reg <- full.data %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(full_prof_count / enrollment_reported) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_full_count.reg <- full.data %>%
+     felm(log(full_prof_count / enrollment_reported) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> ## All faculty Count
> # Naive OLS Regression
> naive_all_count.reg <- reg.data %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(all_prof_count / enrollment_reported) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_all_count.reg <- reg.data %>%
+     felm(log(all_prof_count / enrollment_reported) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> # Collate the results to a LaTeX table
> stargazer(
+     naive_lecturer_count.reg, shiftshare_lecturer_count.reg,
+     naive_assistant_count.reg, shiftshare_assistant_count.reg,
+     naive_full_count.reg, shiftshare_full_count.reg,
+     naive_all_count.reg, shiftshare_all_count.reg,
+     dep.var.caption = "Dependent Variable: Employment Count by Professor Group",
+     dep.var.labels = c("Lecturer", "Assistant", "Full", "All"),
+     column.labels = rep(c("OLS", "2SLS"), 4),
+     digits = digits.no,
+     digits.extra = digits.no,
+     model.names = FALSE,
+     omit = "factor|count|year",
+     intercept.bottom = TRUE,
+     order = c(2, 1, 3),
+     covariate.labels = c("State Funding", "Tuition Revenue", "Constant"),
+     omit.stat = c("LL", "ser", "aic", "wald", "adj.rsq"),
+     star.cutoffs = NA,
+     header = FALSE, float = FALSE, no.space = TRUE,
+     omit.table.layout = "n", notes.append = FALSE,
+     type = "text",
+     out = "../../text/tables/facultycount-shock-reg-fte.tex")

=============================================================================
                  Dependent Variable: Employment Count by Professor Group    
              ---------------------------------------------------------------
                 Lecturer        Assistant         Full             All      
                OLS    2SLS     OLS    2SLS     OLS    2SLS     OLS    2SLS  
                (1)     (2)     (3)     (4)     (5)     (6)     (7)     (8)  
-----------------------------------------------------------------------------
State Funding -0.129  -0.437   0.086   0.136   0.128   0.120   0.083   0.053 
              (0.030) (0.101) (0.044) (0.075) (0.058) (0.037) (0.047) (0.031)
-----------------------------------------------------------------------------
Observations  17,329  17,329  17,826  17,826  17,929  17,929  18,504  18,504 
R2             0.671   0.657   0.709   0.708   0.783   0.783   0.812   0.812 
=============================================================================
> 
> # Tenure Count Regressions ----------------------------------------------------
> 
> ## Non-tenured faculty Count
> # Naive OLS Regression
> naive_nontenured_count.reg <- reg.data %>%
+     filter(!is.na(nontenured_tenure_count), nontenured_tenure_count > 0) %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(nontenured_tenure_count / enrollment_reported) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_nontenured_count.reg <- reg.data %>%
+     filter(!is.na(nontenured_tenure_count), nontenured_tenure_count > 0) %>%
+     felm(log(nontenured_tenure_count / enrollment_reported) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> ## Tenure-track faculty Count
> # Naive OLS Regression
> naive_tenuretrack_count.reg <- reg.data %>%
+     filter(!is.na(tenuretrack_tenure_count), tenuretrack_tenure_count > 0) %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(tenuretrack_tenure_count / enrollment_reported) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_tenuretrack_count.reg <- reg.data %>%
+     filter(!is.na(tenuretrack_tenure_count), tenuretrack_tenure_count > 0) %>%
+     felm(log(tenuretrack_tenure_count / enrollment_reported) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> ## Tenured faculty Count
> # Naive OLS Regression
> naive_tenured_count.reg <- reg.data %>%
+     filter(!is.na(tenured_tenure_count), tenured_tenure_count > 0) %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(tenured_tenure_count / enrollment_reported) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_tenured_count.reg <- reg.data %>%
+     filter(!is.na(tenured_tenure_count), tenured_tenure_count > 0) %>%
+     felm(log(tenured_tenure_count / enrollment_reported) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> ## All faculty Count
> 
> # Naive OLS Regression
> naive_alltenure_count.reg <- reg.data %>%
+     filter(!is.na(all_tenure_count), all_tenure_count > 0) %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(all_tenure_count / enrollment_reported) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> 
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_alltenure_count.reg <- reg.data %>%
+     filter(!is.na(all_tenure_count), all_tenure_count > 0) %>%
+     felm(log(all_tenure_count / enrollment_reported) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> # Collate the results to a LaTeX table
> stargazer(
+     naive_nontenured_count.reg, shiftshare_nontenured_count.reg,
+     naive_tenuretrack_count.reg, shiftshare_tenuretrack_count.reg,
+     naive_tenured_count.reg, shiftshare_tenured_count.reg,
+     naive_alltenure_count.reg, shiftshare_alltenure_count.reg,
+     dep.var.caption = "Dependent Variable: Employment Count by Tenure Group",
+     dep.var.labels = c("Non-tenure", "Tenure-Track", "Tenured", "All"),
+     column.labels = rep(c("OLS", "2SLS"), 4),
+     digits = digits.no,
+     digits.extra = digits.no,
+     model.names = FALSE,
+     omit = "factor|count|year",
+     intercept.bottom = TRUE,
+     order = c(2, 1, 3),
+     covariate.labels = c("State Funding", "Tuition Revenue", "Constant"),
+     omit.stat = c("LL", "ser", "aic", "wald", "adj.rsq"),
+     star.cutoffs = NA,
+     header = FALSE, float = FALSE, no.space = TRUE,
+     omit.table.layout = "n", notes.append = FALSE,
+     type = "text",
+     out = "../../text/tables/tenurecount-shock-reg-fte.tex")

==============================================================================
                    Dependent Variable: Employment Count by Tenure Group      
              ----------------------------------------------------------------
                 Non-tenure     Tenure-Track       Tenured           All      
                OLS     2SLS     OLS    2SLS     OLS    2SLS     OLS    2SLS  
                (1)     (2)      (3)     (4)     (5)     (6)     (7)     (8)  
------------------------------------------------------------------------------
State Funding -0.0004  1.499    0.048   1.926   0.051   0.267   0.037   0.893 
              (0.016) (10.764) (0.051) (8.050) (0.029) (1.104) (0.023) (4.610)
------------------------------------------------------------------------------
Observations   4,825   4,825    5,094   5,094   5,130   5,130   5,181   5,181 
R2             0.849   0.588    0.777  -0.413   0.898   0.872   0.932   0.426 
==============================================================================
> 
> 
> # Faculty Salary Regressions ---------------------------------------------------
> 
> ## Non-tenured faculty salaries
> lecturer.data <- reg.data %>%
+     filter(!is.na(lecturer_profmeansalary_real),
+         lecturer_profmeansalary_real > 0)
> # Naive OLS Regression
> naive_lecturer_salaries.reg <- lecturer.data %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(lecturer_profmeansalary_real) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_lecturer_salaries.reg <- lecturer.data %>%
+     felm(log(lecturer_profmeansalary_real) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> ## Tenure-track faculty salaries
> assistant.data <- reg.data %>%
+     filter(!is.na(assistant_profmeansalary_real),
+         assistant_profmeansalary_real > 0)
> # Naive OLS Regression
> naive_assistant_salaries.reg <- assistant.data %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(assistant_profmeansalary_real) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_assistant_salaries.reg <- assistant.data %>%
+     felm(log(assistant_profmeansalary_real) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> ## Tenured faculty salaries
> full.data <- reg.data %>%
+     filter(!is.na(full_profmeansalary_real),
+         full_profmeansalary_real > 0)
> # Naive OLS Regression
> naive_full_salaries.reg <- full.data %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(full_profmeansalary_real) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_full_salaries.reg <- full.data %>%
+     felm(log(full_profmeansalary_real) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> ## All faculty salaries
> all.data <- reg.data %>%
+     filter(!is.na(all_profmeansalary_real), all_profmeansalary_real > 0)
> # Naive OLS Regression
> naive_all_salaries.reg <- all.data %>%
+     mutate(`log(stateappropriations_real/enrollment_reported)(fit)` =
+         log(stateappropriations_real / enrollment_reported)) %>%
+     felm(log(all_profmeansalary_real) ~ 1 +
+         `log(stateappropriations_real/enrollment_reported)(fit)` |
+         unitid + year |
+         0 |
+         state + year,
+         data = .)
> # Shift-share IV Regression, explained by state appropriation shock
> shiftshare_all_salaries.reg <- all.data %>%
+     felm(log(all_profmeansalary_real) ~ 1 |
+         unitid + year |
+         (log(stateappropriations_real / enrollment_reported) ~
+             I(-log(appropriationshock_perEnroll_real))) |
+         state + year,
+         data = .)
> 
> # Collate the results to a LaTeX table
> stargazer(
+     naive_lecturer_salaries.reg, shiftshare_lecturer_salaries.reg,
+     naive_assistant_salaries.reg, shiftshare_assistant_salaries.reg,
+     naive_full_salaries.reg, shiftshare_full_salaries.reg,
+     naive_all_salaries.reg, shiftshare_all_salaries.reg,
+     dep.var.caption = "Dependent Variable: Mean Salary by Professor Group",
+     dep.var.labels = c("Lecturer", "Assistant", "Full", "All"),
+     column.labels = rep(c("OLS", "2SLS"), 4),
+     digits = digits.no,
+     digits.extra = digits.no,
+     model.names = FALSE,
+     omit = "factor|count|year",
+     intercept.bottom = TRUE,
+     order = c(2, 1, 3),
+     covariate.labels = c("State Funding", "Tuition Revenue", "Constant"),
+     omit.stat = c("LL", "ser", "aic", "wald", "adj.rsq"),
+     star.cutoffs = NA,
+     header = FALSE, float = FALSE, no.space = TRUE,
+     omit.table.layout = "n", notes.append = FALSE,
+     type = "text",
+     out = "../../text/tables/facultysalaries-shock-reg-fte.tex")

=============================================================================
                    Dependent Variable: Mean Salary by Professor Group       
              ---------------------------------------------------------------
                 Lecturer        Assistant         Full             All      
                OLS    2SLS     OLS    2SLS     OLS    2SLS     OLS    2SLS  
                (1)     (2)     (3)     (4)     (5)     (6)     (7)     (8)  
-----------------------------------------------------------------------------
State Funding  0.010   0.034   0.007   0.011   0.011   0.027   0.004   0.018 
              (0.005) (0.025) (0.006) (0.021) (0.005) (0.029) (0.011) (0.035)
-----------------------------------------------------------------------------
Observations  16,686  16,686  17,750  17,750  17,837  17,837  17,759  17,759 
R2             0.670   0.668   0.809   0.809   0.826   0.825   0.403   0.403 
=============================================================================
> 
> 
> # Local Projections for staying-power of effects -------------------------------
> # install.packages("lpirfs")
> # https://cran.r-project.org/web/packages/lpirfs/lpirfs.pdf
> library(plm)
> library(lpirfs)
> time.horizon <- 10
> 
> # Define data sample for the LP estimation
> lp.data <- reg.data %>%
+     transmute(unitid = unitid,
+         year = year,
+         all_prof_count = log(all_prof_count / enrollment_reported),
+         all_profmeansalary_real = log(all_profmeansalary_real),
+         stateappropriations_real = log(stateappropriations_real / enrollment_reported),
+         appropriationshock_perEnroll_real =
+             I(-log(appropriationshock_perEnroll_real)),
+         tuitionrev_real = log(tuitionrev_real / enrollment_reported))
> 
> # Run the LP method for the first-stage regression.
> firststage.lpreg <-
+     lp_lin_panel(data_set = lp.data,
+         # Outcome variable
+         endog_data = "stateappropriations_real",
+         # Predictor variable
+         shock = "appropriationshock_perEnroll_real",
+         # Contemporaneous control
+         c_exog_data = "tuitionrev_real",
+         # Option to use IV for predictor endogeneity (not used here)
+         iv_reg = FALSE,
+         # Add fixed effects + clsutered SEs in the panel
+         panel_model = "within",
+         panel_effect = "twoways",
+         robust_cov = "vcovHC",
+         robust_cluster = c("group", "time"),
+         confint = 1.96,
+         hor = time.horizon)
> # Save this plot
> ggsave("../../text/figures/firststage-lp.png",
+     plot = plot(firststage.lpreg),
+     units = "cm", width = fig.width, height = fig.height)
> 
> # Run the LP method for the second-stage, outcome count profs per student
> all_count.lpreg <-
+     lp_lin_panel(data_set = lp.data,
+         # Outcome variable
+         endog_data = "all_prof_count",
+         # Predictor variable
+         shock = "stateappropriations_real",
+         # Contemporaneous control
+         #c_exog_data = "tuitionrev_real",
+         # Option to use IV for predictor endogeneity
+         iv_reg = TRUE,
+         instrum = "appropriationshock_perEnroll_real",
+         # Add fixed effects + clsutered SEs in the panel
+         panel_model = "within",
+         panel_effect = "twoways",
+         robust_cov = "vcovHC",
+         robust_cluster = c("group", "time"),
+         confint = 1.96,
+         hor = time.horizon)
> # Save this plot
> ggsave("../../text/figures/all-count-lp.png",
+     plot = plot(all_count.lpreg),
+     units = "cm", width = fig.width, height = fig.height)
> 
> # Run the LP method for the second-stage, outcome mean salaries
> all_salaries.lpreg <-
+     lp_lin_panel(data_set = lp.data,
+         # Outcome variable
+         endog_data = "all_profmeansalary_real",
+         # Predictor variable
+         shock = "stateappropriations_real",
+         # Contemporaneous control
+         #c_exog_data = "tuitionrev_real",
+         # Option to use IV for predictor endogeneity
+         iv_reg = TRUE,
+         instrum = "appropriationshock_perEnroll_real",
+         # Add fixed effects + clsutered SEs in the panel
+         panel_model = "within",
+         panel_effect = "twoways",
+         robust_cov = "vcovHC",
+         robust_cluster = c("group", "time"),
+         confint = 1.96,
+         hor = time.horizon)
> # Save this plot
> ggsave("../../text/figures/all-salaries-lp.png",
+     plot = plot(all_salaries.lpreg),
+     units = "cm", width = fig.width, height = fig.height)
> 
> proc.time()
   user  system elapsed 
 28.319   0.292  28.093 
